// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// CertExpiryApplyConfiguration represents an declarative configuration of the CertExpiry type for use
// with apply.
type CertExpiryApplyConfiguration struct {
	Bundle  *string `json:"bundle,omitempty"`
	Subject *string `json:"subject,omitempty"`
	Expiry  *string `json:"expiry,omitempty"`
}

// CertExpiryApplyConfiguration constructs an declarative configuration of the CertExpiry type for use with
// apply.
func CertExpiry() *CertExpiryApplyConfiguration {
	return &CertExpiryApplyConfiguration{}
}

// WithBundle sets the Bundle field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Bundle field is set to the value of the last call.
func (b *CertExpiryApplyConfiguration) WithBundle(value string) *CertExpiryApplyConfiguration {
	b.Bundle = &value
	return b
}

// WithSubject sets the Subject field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Subject field is set to the value of the last call.
func (b *CertExpiryApplyConfiguration) WithSubject(value string) *CertExpiryApplyConfiguration {
	b.Subject = &value
	return b
}

// WithExpiry sets the Expiry field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expiry field is set to the value of the last call.
func (b *CertExpiryApplyConfiguration) WithExpiry(value string) *CertExpiryApplyConfiguration {
	b.Expiry = &value
	return b
}
